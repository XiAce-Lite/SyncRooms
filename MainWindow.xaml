<Window
    x:Class="SyncRooms.MainWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:controls="clr-namespace:SyncRooms.Controls"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:local="clr-namespace:SyncRooms"
    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:prop="clr-namespace:SyncRooms.Properties"
    xmlns:vm="clr-namespace:SyncRooms.ViewModel"
    xmlns:vwp="clr-namespace:WpfToolkit.Controls;assembly=VirtualizingWrapPanel"
    Title="SyncRooms:Rooms List"
    Width="1200"
    Height="720"
    d:DataContext="{d:DesignInstance Type=vm:MainWindowViewModel}"
    Style="{StaticResource MaterialDesignWindow}"
    Topmost="{Binding WindowTopMost, Mode=TwoWay, Source={x:Static prop:Settings.Default}, UpdateSourceTrigger=PropertyChanged}"
    mc:Ignorable="d">

    <Window.DataContext>
        <vm:MainWindowViewModel />
    </Window.DataContext>

    <Window.Background>
        <SolidColorBrush Color="{DynamicResource {x:Static SystemColors.ControlColorKey}}" />
    </Window.Background>

    <Window.Resources>
        <Style x:Key="CheckHeader" TargetType="CheckBox">
            <Setter Property="FontSize" Value="11" />
            <Setter Property="Foreground" Value="White" />
            <Setter Property="HorizontalContentAlignment" Value="Stretch" />
            <Setter Property="VerticalContentAlignment" Value="center" />
        </Style>
    </Window.Resources>

    <Grid>
        <Grid Margin="10,37,0,0">
            <ListView
                x:Name="PanelView"
                ItemsSource="{Binding Rooms}"
                ScrollViewer.CanContentScroll="true"
                ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                SelectionMode="Single"
                VirtualizingPanel.IsVirtualizing="True"
                VirtualizingPanel.VirtualizationMode="Recycling"
                Visibility="{Binding ElementName=PanelOption, Path=IsChecked, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource BooleanToVisibilityConverter}}">

                <ListView.ItemsPanel>
                    <ItemsPanelTemplate>
                        <vwp:VirtualizingWrapPanel
                            Orientation="Horizontal"
                            SpacingMode="StartAndEndOnly"
                            StretchItems="True"
                            VirtualizingPanel.IsVirtualizing="True"
                            VirtualizingPanel.VirtualizationMode="Recycling" />
                    </ItemsPanelTemplate>
                </ListView.ItemsPanel>

                <ListView.ItemContainerStyle>
                    <Style TargetType="ListViewItem">
                        <Setter Property="HorizontalAlignment" Value="Left" />
                        <Setter Property="HorizontalContentAlignment" Value="Left" />
                        <Setter Property="VerticalContentAlignment" Value="Stretch" />
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type ContentControl}">
                                    <Border Background="{TemplateBinding Background}">
                                        <ContentPresenter />
                                    </Border>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </ListView.ItemContainerStyle>

                <ListView.ItemTemplate>
                    <DataTemplate>
                        <VirtualizingStackPanel
                            Orientation="Horizontal"
                            ScrollViewer.CanContentScroll="true"
                            VirtualizingPanel.IsVirtualizing="True"
                            VirtualizingPanel.VirtualizationMode="Recycling">

                            <controls:RoomCard />

                        </VirtualizingStackPanel>
                    </DataTemplate>
                </ListView.ItemTemplate>

            </ListView>

            <DataGrid
                x:Name="DetailView"
                AutoGenerateColumns="False"
                CanUserAddRows="False"
                CanUserDeleteRows="False"
                CanUserResizeRows="False"
                ItemsSource="{Binding Rooms}"
                RowHeaderWidth="0"
                ScrollViewer.CanContentScroll="true"
                SelectionMode="Single"
                VirtualizingPanel.IsVirtualizing="True"
                VirtualizingPanel.ScrollUnit="Pixel"
                VirtualizingPanel.VirtualizationMode="Recycling"
                Visibility="{Binding ElementName=DetailOption, Path=IsChecked, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource BooleanToVisibilityConverter}}">

                <!--
                    Background="{Binding NeedPasswd, Converter={StaticResource LockRoomConverter}}"
                -->
                <DataGrid.RowStyle>
                    <Style TargetType="DataGridRow">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding NeedPasswd}" Value="True">
                                <Setter Property="Background" Value="#ffa9a9a9" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </DataGrid.RowStyle>

                <DataGrid.Columns>

                    <DataGridTemplateColumn CanUserSort="True" Header="ルーム名">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <VirtualizingStackPanel
                                    Orientation="Vertical"
                                    ScrollViewer.IsDeferredScrollingEnabled="true"
                                    VirtualizingPanel.IsVirtualizing="True"
                                    VirtualizingPanel.VirtualizationMode="Recycling">

                                    <TextBlock
                                        FontSize="18"
                                        FontWeight="Bold"
                                        Text="{Binding Name, UpdateSourceTrigger=PropertyChanged}"
                                        TextWrapping="Wrap" />

                                    <TextBlock
                                        Margin="10,10,0,0"
                                        Text="{Binding RoomId, UpdateSourceTrigger=PropertyChanged}"
                                        TextWrapping="Wrap" />

                                </VirtualizingStackPanel>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>

                    </DataGridTemplateColumn>


                    <DataGridTemplateColumn
                        Width="Auto"
                        MaxWidth="310"
                        CanUserSort="True"
                        Header="メンバー">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <ItemsControl
                                    Height="Auto"
                                    ItemsSource="{Binding Members, UpdateSourceTrigger=PropertyChanged, FallbackValue=''}"
                                    ScrollViewer.CanContentScroll="True"
                                    ScrollViewer.HorizontalScrollBarVisibility="Auto"
                                    ScrollViewer.IsDeferredScrollingEnabled="True"
                                    VirtualizingPanel.IsContainerVirtualizable="True"
                                    VirtualizingPanel.IsVirtualizing="True"
                                    VirtualizingPanel.ScrollUnit="Pixel"
                                    VirtualizingPanel.VirtualizationMode="Recycling">

                                    <ItemsControl.ItemTemplate>
                                        <DataTemplate>
                                            <controls:MembersSmall DataContext="{Binding}" />
                                        </DataTemplate>
                                    </ItemsControl.ItemTemplate>

                                    <ItemsControl.ItemsPanel>
                                        <ItemsPanelTemplate>
                                            <WrapPanel
                                                ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                                                VirtualizingPanel.IsVirtualizing="True"
                                                VirtualizingPanel.VirtualizationMode="Recycling" />
                                        </ItemsPanelTemplate>
                                    </ItemsControl.ItemsPanel>
                                </ItemsControl>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>

                    <DataGridTemplateColumn Width="350" Header="ルーム説明">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <ScrollViewer
                                    Width="Auto"
                                    Height="48"
                                    HorizontalScrollBarVisibility="Disabled"
                                    VerticalScrollBarVisibility="Auto">
                                    <TextBlock
                                        FontSize="10"
                                        Text="{Binding Description}"
                                        TextWrapping="Wrap" />

                                </ScrollViewer>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>

                    <DataGridTemplateColumn
                        Width="240"
                        CanUserSort="True"
                        Header="タグ">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <ItemsControl
                                    Height="Auto"
                                    ItemsSource="{Binding Tags, UpdateSourceTrigger=PropertyChanged, FallbackValue=''}"
                                    ScrollViewer.CanContentScroll="True"
                                    ScrollViewer.HorizontalScrollBarVisibility="Auto"
                                    ScrollViewer.IsDeferredScrollingEnabled="True"
                                    VirtualizingPanel.IsContainerVirtualizable="True"
                                    VirtualizingPanel.IsVirtualizing="True"
                                    VirtualizingPanel.ScrollUnit="Pixel"
                                    VirtualizingPanel.VirtualizationMode="Recycling">

                                    <ItemsControl.ItemTemplate>
                                        <DataTemplate>
                                            <controls:Tags DataContext="{Binding}" />
                                        </DataTemplate>
                                    </ItemsControl.ItemTemplate>

                                    <ItemsControl.ItemsPanel>
                                        <ItemsPanelTemplate>
                                            <WrapPanel
                                                ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                                                VirtualizingPanel.IsVirtualizing="True"
                                                VirtualizingPanel.VirtualizationMode="Recycling" />
                                        </ItemsPanelTemplate>
                                    </ItemsControl.ItemsPanel>
                                </ItemsControl>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>

                </DataGrid.Columns>
            </DataGrid>
        </Grid>

        <materialDesign:DrawerHost IsLeftDrawerOpen="{Binding IsChecked, ElementName=MenuToggleButton}">
            <materialDesign:DrawerHost.LeftDrawerContent>
                <DockPanel MinWidth="220">
                    <ToggleButton
                        Margin="16"
                        HorizontalAlignment="Right"
                        DockPanel.Dock="Top"
                        IsChecked="{Binding IsChecked, ElementName=MenuToggleButton, Mode=TwoWay}"
                        Style="{StaticResource MaterialDesignHamburgerToggleButton}" />

                    <VirtualizingStackPanel
                        Margin="16,4"
                        Cursor=""
                        VirtualizingPanel.IsVirtualizing="true"
                        VirtualizingPanel.VirtualizationMode="Recycling">

                        <VirtualizingStackPanel
                            Margin="15,0,0,0"
                            Cursor=""
                            Orientation="Horizontal">
                            <CheckBox
                                Padding="9"
                                Click="MenuItem_Click"
                                Content="最前面固定"
                                FontWeight="DemiBold"
                                Foreground="#FF3F51B5"
                                IsChecked="{Binding WindowTopMost, Mode=TwoWay, Source={x:Static prop:Settings.Default}, UpdateSourceTrigger=PropertyChanged}" />
                        </VirtualizingStackPanel>

                        <RadioButton
                            x:Name="PanelOption"
                            Margin="15,0,0,0"
                            Padding="10,4,4,4"
                            Click="MenuItem_Click"
                            Content="パネル表示"
                            FontWeight="DemiBold"
                            Foreground="#FF3F51B5"
                            GroupName="ViewOption"
                            IsChecked="{Binding PanelView, Mode=TwoWay, Source={x:Static prop:Settings.Default}, UpdateSourceTrigger=PropertyChanged}"
                            Style="{StaticResource MaterialDesignUserForegroundRadioButton}" />
                        <RadioButton
                            x:Name="DetailOption"
                            Margin="15,0,0,0"
                            Padding="10,4,4,4"
                            Click="MenuItem_Click"
                            Content="詳細表示"
                            FontWeight="DemiBold"
                            Foreground="#FF3F51B5"
                            GroupName="ViewOption"
                            IsChecked="{Binding ElementName=PanelOption, Path=IsChecked, Converter={StaticResource InvertBooleanConverter}}"
                            Style="{StaticResource MaterialDesignUserForegroundRadioButton}" />


                        <!--
                        <Button
                            x:Name="BtnSettings"
                            Margin="0,0,0,0"
                            HorizontalAlignment="Left"
                            Style="{StaticResource MaterialDesignFlatButton}">
                            <DockPanel>
                                <materialDesign:PackIcon Kind="Toolbox" />
                                <TextBlock
                                    Margin="10,0"
                                    Cursor=""
                                    Text="設定" />
                            </DockPanel>
                        </Button>
                        -->

                        <Button
                            x:Name="BtnExit"
                            Margin="0,0,0,0"
                            HorizontalAlignment="Left"
                            Click="BtnExit_Click"
                            Style="{StaticResource MaterialDesignFlatButton}">
                            <DockPanel>
                                <materialDesign:PackIcon VerticalAlignment="Center" Kind="ExitToApp" />
                                <TextBlock
                                    Margin="10,0"
                                    VerticalAlignment="Center"
                                    Text="終了" />
                            </DockPanel>
                        </Button>

                    </VirtualizingStackPanel>
                </DockPanel>
            </materialDesign:DrawerHost.LeftDrawerContent>

            <materialDesign:ColorZone
                Padding="10,4,10,4"
                VerticalAlignment="Top"
                Mode="PrimaryDark">
                <DockPanel>
                    <VirtualizingStackPanel
                        Orientation="Horizontal"
                        VirtualizingPanel.IsVirtualizing="true"
                        VirtualizingPanel.VirtualizationMode="Recycling">
                        <ToggleButton
                            x:Name="MenuToggleButton"
                            Width="22"
                            Height="22"
                            AutomationProperties.Name="HamburgerToggleButton"
                            Style="{DynamicResource MaterialDesignHamburgerToggleButton}" />

                        <Button
                            x:Name="GetHTML"
                            Height="20"
                            Margin="10,0,0,0"
                            Click="GetHTML_Click"
                            Content="Reload"
                            DockPanel.Dock="Top"
                            FontSize="10"
                            IsEnabled="{Binding ElementName=UseAutoReload, Path=IsChecked, Converter={StaticResource InvertBooleanConverter}}"
                            ToolTip="手動リロード" />

                        <Label
                            Margin="16,0,0,0"
                            VerticalAlignment="Center"
                            Content="Rooms :"
                            DockPanel.Dock="Top"
                            FontSize="10"
                            Foreground="White" />

                        <Label
                            Width="20"
                            VerticalAlignment="Center"
                            HorizontalContentAlignment="Right"
                            Content="{Binding Rooms.Count, FallbackValue='0'}"
                            DockPanel.Dock="Top"
                            FontSize="10"
                            Foreground="White"
                            ToolTip="選択された部屋数を表示" />

                        <CheckBox
                            x:Name="UseAutoReload"
                            Height="22"
                            Margin="13,0,0,0"
                            Padding="4,1,0,0"
                            HorizontalContentAlignment="Stretch"
                            VerticalContentAlignment="Center"
                            Click="UseAutoReload_Click"
                            Content="Auto Reload"
                            FlowDirection="RightToLeft"
                            FontSize="10"
                            IsChecked="{Binding UseAutoReload, Mode=TwoWay, Source={x:Static prop:Settings.Default}, UpdateSourceTrigger=PropertyChanged}"
                            Style="{DynamicResource MaterialDesignUserForegroundCheckBox}"
                            ToolTip="自動リロードを有効にする。">
                            <CheckBox.BorderBrush>
                                <SolidColorBrush Opacity="1" Color="#FF3F51B5" />
                            </CheckBox.BorderBrush>
                        </CheckBox>

                        <Label
                            Margin="16,0,0,0"
                            VerticalAlignment="Center"
                            Content="Reload Sec: "
                            DockPanel.Dock="Top"
                            FontSize="10"
                            Foreground="White" />

                        <Slider
                            x:Name="ReloadTiming"
                            Width="100"
                            Margin="5,1,0,0"
                            AutoToolTipPlacement="TopLeft"
                            Foreground="AliceBlue"
                            IsEnabled="{Binding ElementName=UseAutoReload, Path=IsChecked}"
                            Maximum="120"
                            Minimum="15"
                            SmallChange="1"
                            ToolTip="自動リロードの間隔を調整。秒単位。"
                            ValueChanged="ReloadTiming_ValueChanged"
                            Value="{Binding ReloadTiming, Mode=TwoWay, Source={x:Static prop:Settings.Default}, UpdateSourceTrigger=PropertyChanged}" />

                        <CheckBox
                            x:Name="CheckJP_Room"
                            Margin="13,0,0,0"
                            Padding="4,2,0,0"
                            Click="Option_Click"
                            Content="JP"
                            IsChecked="{Binding IsVisibleJp, Mode=TwoWay, Source={x:Static prop:Settings.Default}, UpdateSourceTrigger=PropertyChanged}"
                            Style="{StaticResource CheckHeader}"
                            ToolTip="日本語設定の部屋を選択" />
                        <CheckBox
                            x:Name="CheckKR_Room"
                            Margin="13,0,0,0"
                            Padding="4,2,0,0"
                            Click="Option_Click"
                            Content="KR"
                            IsChecked="{Binding IsVisibleKr, Mode=TwoWay, Source={x:Static prop:Settings.Default}, UpdateSourceTrigger=PropertyChanged}"
                            Style="{StaticResource CheckHeader}"
                            ToolTip="韓国語設定の部屋を選択" />
                        <CheckBox
                            x:Name="CheckLocked"
                            Margin="13,0,0,0"
                            Padding="4,2,0,0"
                            Click="Option_Click"
                            Content="Lock"
                            IsChecked="{Binding IsVisibleLocked, Mode=TwoWay, Source={x:Static prop:Settings.Default}, UpdateSourceTrigger=PropertyChanged}"
                            Style="{StaticResource CheckHeader}"
                            ToolTip="鍵つきの部屋を選択" />
                        <CheckBox
                            x:Name="CheckUnlocked"
                            Margin="13,0,0,0"
                            Padding="4,2,0,0"
                            Click="Option_Click"
                            Content="Unlock"
                            IsChecked="{Binding IsVisibleUnlocked, Mode=TwoWay, Source={x:Static prop:Settings.Default}, UpdateSourceTrigger=PropertyChanged}"
                            Style="{StaticResource CheckHeader}"
                            ToolTip="鍵なしの部屋を選択" />

                        <!--
                            テスト用ボタン。色々使う。
                        -->
                        <Button
                            x:Name="TextButton"
                            Height="20"
                            Margin="10,0,0,0"
                            Click="TextButton_Click"
                            Content="Test"
                            Cursor="Hand"
                            FontSize="10"
                            Visibility="Collapsed" />
                    </VirtualizingStackPanel>
                </DockPanel>
            </materialDesign:ColorZone>
        </materialDesign:DrawerHost>
    </Grid>
</Window>
